@{
    ViewBag.Title = "Index";
    List < WhareHouse.Models.ORDERPRODUCT > oRDERPRODUCTs= ViewBag.OrderProduct;
    List < WhareHouse.Models.ORDERDETAILS > oRDERDETAILs= ViewBag.OrderDetails;
    List < WhareHouse.Models.PRODUCT > pRODUCTs = ViewBag.Product;
    List < WhareHouse.Models.PROVIDER > pRovider = ViewBag.Provider;
}

<div class="breadcrumb topBar">
    <div class="topButtonsContainer">
        @Html.ActionLink("Realizar Orden", "CreateOrder", null, new { @class = "btn btn-outline-primary topButtons" })
    </div>
    <div class="topButtonsContainer">
        @Html.ActionLink("Lista Ordenes", "Index", null, new { @class = "btn btn-outline-primary topButtons" })
    </div>
</div>

<div class="card mb-3">
    <div class="card-header">
        <i class="fas fa-table"></i>
        Ordenes
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead class="theadAling">
                    <tr>
                        <th>N° Orden</th>
                        <th>Fecha Registro</th>
                        <th>Hora Registro</th>
                        <th>Proveedor</th>
                        <th>Estado</th>
                        <th>Opciones</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>N° Orden</th>
                        <th>Fecha Registro</th>
                        <th>Hora Registro</th>
                        <th>Proveedor</th>
                        <th>Estado</th>
                        <th>Opciones</th>
                    </tr>
                </tfoot>
                <tbody>
                    @if (oRDERDETAILs.Count()==0)
                    {
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                    }
                    else {

                        var innerjoin = (from op in oRDERPRODUCTs
                                         join od in oRDERDETAILs on op.ORDERID equals od.ODORDERID
                                         join pr in pRODUCTs on od.ODIDBARCODE equals pr.IDBARCODE
                                         join pro in pRovider on pr.IDPROVIDER equals pro.IDPROVIDER
                                         group new {op,od,pr,pro} by new { op.ORDERID,op.ORDERDATE,op.ORDERHOUR,pro.COMPANYNAME,op.STATE} into hi
                                         select new
                                         {
                                             hi.Key.ORDERID,
                                             hi.Key.ORDERDATE,
                                             hi.Key.ORDERHOUR,
                                             hi.Key.COMPANYNAME,
                                             hi.Key.STATE,
                                         }).ToList();
                        for (int i = 0; i < innerjoin.Count(); i++)
                        {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => innerjoin[i].ORDERID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => innerjoin[i].ORDERDATE)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => innerjoin[i].ORDERHOUR)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => innerjoin[i].COMPANYNAME)
                        </td>
                        <td>
                            @if (innerjoin[i].STATE == "1")
                            {
                                <p>Recepcionado</p>
                            }
                            else
                            {
                                <p>Aun No LLega</p>
                            }

                        </td>
                        <td>
                            <div class="nav-item dropdown tableMenu">
                                <a class="nav-link btn tablemenuButton" href="#" id="pagesDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-chevron-circle-down fa-2x tableMenu"></i>
                                </a>
                                <div class="dropdown-menu" aria-labelledby="pagesDropdown">
                                    @Html.ActionLink("Detalles", "Details", new { id = innerjoin[i].ORDERID }, new { @class = "tableMenu ColorMenu" })
                                    <div class="dropdown-divider"></div>
                                    @Html.ActionLink("Confirmar Recepcion", "Reception", new { idOrder = innerjoin[i].ORDERID, CompannyName = innerjoin[i].COMPANYNAME }, new { @class = "tableMenu ColorMenu" })
                                </div>
                            </div>
                        </td>
                    </tr>
                    }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

